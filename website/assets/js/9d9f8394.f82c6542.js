"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9013],{7309:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"troubleshooting","title":"Troubleshooting","description":"Getting downloaded package ... version ... lower than required ... for update error when trying to patch an image","source":"@site/docs/troubleshooting.md","sourceDirName":".","slug":"/troubleshooting","permalink":"/copacetic/website/next/troubleshooting","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Troubleshooting"},"sidebar":"sidebar","previous":{"title":"Tagging Guidelines","permalink":"/copacetic/website/next/best-practices"},"next":{"title":"FAQ","permalink":"/copacetic/website/next/faq"}}');var t=n(4848),a=n(8453);const o={title:"Troubleshooting"},s=void 0,l={},c=[{value:"Getting <code>downloaded package ... version ... lower than required ... for update</code> error when trying to patch an image",id:"getting-downloaded-package--version--lower-than-required--for-update-error-when-trying-to-patch-an-image",level:2},{value:"Copa and Trivy throw errors when Oracle Linux is passed in",id:"copa-and-trivy-throw-errors-when-oracle-linux-is-passed-in",level:2},{value:"Filtering Vulnerabilities",id:"filtering-vulnerabilities",level:2},{value:"Rego Policy",id:"rego-policy",level:3},{value:"Ignore File",id:"ignore-file",level:3}];function h(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.h2,{id:"getting-downloaded-package--version--lower-than-required--for-update-error-when-trying-to-patch-an-image",children:["Getting ",(0,t.jsx)(i.code,{children:"downloaded package ... version ... lower than required ... for update"})," error when trying to patch an image"]}),"\n",(0,t.jsx)(i.p,{children:"This error means that the package manager is trying to install a version of the package that is lower than the version that was required from the scanner report. This can happen for a few reasons:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Package repositories are not updated to the latest version of the package. For example, sometimes there is a lag between when a CVE is detected by Trivy using Red Hat vulnerability database and when it is available in the package repositories for CentOS."}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"To diagnose this, look at the Trivy report and find the applicable vulnerability database (found under DataSource -> URL). Search for the corresponding package receiving the error in the database to check if it is available."}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Scanner reports are not up to date. Make sure to run the scanner with the latest vulnerability database. If you are using Trivy, it is recommended to pull the latest version of the Trivy DB, and not rely on cached or stale versions."}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:["To verify the package version discrepancies, you can compare the package version provided by the package repositories and the scanner reports. Follow the Trivy documentation on ",(0,t.jsx)(i.a,{href:"https://aquasecurity.github.io/trivy/dev/community/contribute/discussion/#false-detection",children:"how to find the security advisory data sources"}),", and then compare the package version in the scanner report with the applicable security advisory, and applicable package repository."]}),"\n",(0,t.jsx)(i.p,{children:"If you are continuing to see this and the package repositories and vulnerability databases are not updated, you can either:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:["use the ",(0,t.jsx)(i.code,{children:"--ignore-errors"})," flag or ",(0,t.jsx)(i.a,{href:"/copacetic/website/next/troubleshooting#filtering-vulnerabilities",children:"filter the applicable vulnerability in the scanner"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsx)(i.p,{children:"update all packages without any scanner reports. This can be done by not providing a scanner report to Copa, and Copa will update all packages to the latest version available in the package repositories."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.h2,{id:"copa-and-trivy-throw-errors-when-oracle-linux-is-passed-in",children:"Copa and Trivy throw errors when Oracle Linux is passed in"}),"\n",(0,t.jsx)(i.p,{children:"Copa supports patching Oracle Linux in two ways:"}),"\n",(0,t.jsxs)(i.p,{children:["With a vulnerability scan, ",(0,t.jsx)(i.code,{children:"--ignore-errors"})," must be passed in. This will patch all CVEs aside from false positives reported by Trivy:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"copa patch -r /oracle-7.9-vulns.json -i docker.io/library/oraclelinux:7.9 --ignore-errors\n"})}),"\n",(0,t.jsx)(i.p,{children:"Without a vulnerability scan, Copa will update all packages in the image:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"copa patch -i docker.io/library/oraclelinux:7.9\n"})}),"\n",(0,t.jsxs)(i.p,{children:["Oracle reports CVEs in a way that causes Trivy to report false positives that Copa will be unable to patch. To patch the entire image, use the Copa ",(0,t.jsx)(i.code,{children:"--ignore-errors"})," flag or omit the vulnerability scan report to upgrade all outdated packages. See ",(0,t.jsx)(i.a,{href:"https://github.com/aquasecurity/trivy/issues/1967#issuecomment-1092987400",children:"this GitHub issue"})," for more information."]}),"\n",(0,t.jsx)(i.h2,{id:"filtering-vulnerabilities",children:"Filtering Vulnerabilities"}),"\n",(0,t.jsx)(i.p,{children:"You might want to filter/ignore some of the vulnerabilities while patching. To do so, you need to first filter those undesired vulnerabilities from your scanner output."}),"\n",(0,t.jsx)(i.p,{children:"For Trivy, vulnerabilities can be filtered by the following 2 ways:"}),"\n",(0,t.jsx)(i.h3,{id:"rego-policy",children:"Rego Policy"}),"\n",(0,t.jsx)(i.p,{children:"An example rego file which demonstrates how to ignore certain Vulnerability IDs or Package Names:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'$ cat trivy_ignore.rego\n\npackage trivy\n\nimport data.lib.trivy\n\ndefault ignore = false\n\n\n# Ignore the following Vulnerability IDs\nignore_vulnerability_ids := {\n   "CVE-2018-14618"\n}\n# Ignore the following Package Names\nignore_pkgs := {"bash", "vim"}\n\n\n# For ignoring vulnID\nignore {\n   input.VulnerabilityID == ignore_vulnerability_ids[_]\n}\n# For ignoring pkgName\nignore {\n\tinput.PkgName == ignore_pkgs[_]\n}\n\n'})}),"\n",(0,t.jsxs)(i.p,{children:["After adding the above rego file, run the image scan with the ",(0,t.jsx)(i.code,{children:"--ignore-policy"})," flag followed by the file name to ignore them while scanning:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"trivy image --ignore-policy trivy_ignore.rego ruby:2.4.0\n"})}),"\n",(0,t.jsx)(i.p,{children:'In the above example, the vulnerability "CVE-2018-14618"  and the packages "bash" & "vim" are ignored while scanning, and hence patching the image.'}),"\n",(0,t.jsx)(i.h3,{id:"ignore-file",children:"Ignore File"}),"\n",(0,t.jsxs)(i.p,{children:["Use a ",(0,t.jsx)(i.code,{children:".trivyignore"})," file to list all the vulnerabilities you want to ignore."]}),"\n",(0,t.jsx)(i.p,{children:"Example:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"$ cat .trivyignore\n\n# Accept the risk\nCVE-2018-14618\n"})}),"\n",(0,t.jsx)(i.p,{children:"In the above example, the vulnerability CVE-2018-14618 is ignored while scanning, and hence while patching the image."}),"\n",(0,t.jsxs)(i.p,{children:["For a more detailed explanation on how to ignore certain vulnerabilities with Trivy, please refer to the official documentation ",(0,t.jsx)(i.a,{href:"https://aquasecurity.github.io/trivy/v0.44/docs/configuration/filtering/",children:"here"}),"."]})]})}function d(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>s});var r=n(6540);const t={},a=r.createContext(t);function o(e){const i=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(a.Provider,{value:i},e.children)}}}]);