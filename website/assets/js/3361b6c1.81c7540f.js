"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8538],{8004:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"docker-build","title":"Docker Build Integration","description":"The copa generate command enables you to leverage Docker\'s native build capabilities for patching container images. By producing a standard Docker build context, it allows you to use familiar docker build commands and options like --platform, --push, --cache-from, and --output that aren\'t available with copa patch. This integration with Docker\'s build system provides maximum flexibility for incorporating security patches into your existing container workflows.","source":"@site/docs/docker-build.md","sourceDirName":".","slug":"/docker-build","permalink":"/copacetic/website/next/docker-build","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"Docker Build Integration"},"sidebar":"sidebar","previous":{"title":"App-Level Patching","permalink":"/copacetic/website/next/app-level-patching"},"next":{"title":"Github Action","permalink":"/copacetic/website/next/github-action"}}');var r=t(4848),c=t(8453);const d={title:"Docker Build Integration"},s=void 0,l={},a=[{value:"Overview",id:"overview",level:2},{value:"Key Advantages over <code>copa patch</code>",id:"key-advantages-over-copa-patch",level:2},{value:"Use Cases",id:"use-cases",level:2},{value:"Command Syntax",id:"command-syntax",level:2},{value:"Flags",id:"flags",level:3},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Pipe to Docker Build",id:"pipe-to-docker-build",level:3},{value:"Save to File",id:"save-to-file",level:3},{value:"With Vulnerability Report",id:"with-vulnerability-report",level:3},{value:"With VEX Output",id:"with-vex-output",level:3},{value:"Build Context Structure",id:"build-context-structure",level:2},{value:"Generated Dockerfile",id:"generated-dockerfile",level:3},{value:"Comparison with <code>copa patch</code>",id:"comparison-with-copa-patch",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"1. Always Verify Output",id:"1-always-verify-output",level:3},{value:"2. Handle TTY Detection",id:"2-handle-tty-detection",level:3},{value:"3. Use Specific Reports for Reproducibility",id:"3-use-specific-reports-for-reproducibility",level:3},{value:"4. Optimize for CI/CD",id:"4-optimize-for-cicd",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"&quot;No local sources enabled&quot; Error",id:"no-local-sources-enabled-error",level:3},{value:"Empty Patch Layer",id:"empty-patch-layer",level:3},{value:"BuildKit Connection Issues",id:"buildkit-connection-issues",level:3},{value:"Summary",id:"summary",level:2},{value:"Next Steps",id:"next-steps",level:2}];function o(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"copa generate"})," command enables you to leverage Docker's native build capabilities for patching container images. By producing a standard Docker build context, it allows you to use familiar ",(0,r.jsx)(n.code,{children:"docker build"})," commands and options like ",(0,r.jsx)(n.code,{children:"--platform"}),", ",(0,r.jsx)(n.code,{children:"--push"}),", ",(0,r.jsx)(n.code,{children:"--cache-from"}),", and ",(0,r.jsx)(n.code,{children:"--output"})," that aren't available with ",(0,r.jsx)(n.code,{children:"copa patch"}),". This integration with Docker's build system provides maximum flexibility for incorporating security patches into your existing container workflows."]}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:["Instead of directly patching and pushing images like ",(0,r.jsx)(n.code,{children:"copa patch"}),", the ",(0,r.jsx)(n.code,{children:"generate"})," command produces a tar stream containing:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"A Dockerfile with instructions to apply the patch"}),"\n",(0,r.jsx)(n.li,{children:"A patch layer directory with the security updates"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["This output can be piped directly to ",(0,r.jsx)(n.code,{children:"docker build"})," or saved as a tar file for later use, giving you full control over the build process with all of Docker's advanced features."]}),"\n",(0,r.jsxs)(n.h2,{id:"key-advantages-over-copa-patch",children:["Key Advantages over ",(0,r.jsx)(n.code,{children:"copa patch"})]}),"\n",(0,r.jsxs)(n.p,{children:["With ",(0,r.jsx)(n.code,{children:"copa generate"}),", you can use any Docker build flag:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Multi-platform builds\ncopa generate -i nginx:1.21.6 | docker buildx build --platform linux/amd64,linux/arm64 -t nginx:patched --push -\n\n# Use build cache\ncopa generate -i nginx:1.21.6 | docker build --cache-from nginx:cache -t nginx:patched -\n\n# Export to different formats\ncopa generate -i nginx:1.21.6 | docker build --output type=tar,dest=patched.tar -\n\n# Set custom build arguments\ncopa generate -i nginx:1.21.6 | docker build --build-arg HTTP_PROXY=http://proxy:8080 -t nginx:patched -\n\n# Specify target registry directly\ncopa generate -i nginx:1.21.6 | docker build -t myregistry.io/nginx:patched --push -\n"})}),"\n",(0,r.jsx)(n.h2,{id:"use-cases",children:"Use Cases"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"copa generate"})," command is ideal for:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Docker Build Integration"})," - Use native Docker build flags and features not available in ",(0,r.jsx)(n.code,{children:"copa patch"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Multi-platform Builds"})," - Leverage ",(0,r.jsx)(n.code,{children:"docker buildx"})," for cross-platform patching"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CI/CD Pipelines"})," - Integrate patches using standard Docker commands your team already knows"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Build Cache Optimization"})," - Use Docker's layer caching mechanisms for faster builds"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Air-gapped Environments"})," - Create patch contexts offline and apply them later"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Custom Registries"})," - Push directly to any registry using Docker's native push capabilities"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"command-syntax",children:"Command Syntax"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"copa generate [flags]\n"})}),"\n",(0,r.jsx)(n.h3,{id:"flags",children:"Flags"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Flag"}),(0,r.jsx)(n.th,{children:"Short"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Default"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--image"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-i"})}),(0,r.jsxs)(n.td,{children:["Application image name and tag to patch ",(0,r.jsx)(n.strong,{children:"(required)"})]}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--report"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-r"})}),(0,r.jsx)(n.td,{children:"Vulnerability report file path (optional)"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--tag"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-t"})}),(0,r.jsx)(n.td,{children:"Tag for the patched image"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--tag-suffix"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Suffix for the patched image (if no explicit --tag provided)"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"patched"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--output-context"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Path to save the generated tar context (instead of stdout)"}),(0,r.jsx)(n.td,{children:"stdout"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--scanner"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-s"})}),(0,r.jsx)(n.td,{children:"Scanner that generated the report"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"trivy"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--addr"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-a"})}),(0,r.jsx)(n.td,{children:"Address of buildkitd service"}),(0,r.jsx)(n.td,{children:"local docker daemon"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--working-folder"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-w"})}),(0,r.jsx)(n.td,{children:"Working folder"}),(0,r.jsx)(n.td,{children:"system temp folder"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--timeout"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Timeout for the operation"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"5m"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--ignore-errors"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Ignore errors during patching"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"false"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--format"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-f"})}),(0,r.jsx)(n.td,{children:"Output format for VEX document"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"openvex"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--output"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-o"})}),(0,r.jsx)(n.td,{children:"Output file path for VEX document"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--loader"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"-l"})}),(0,r.jsxs)(n.td,{children:["Loader to use for loading images (",(0,r.jsx)(n.code,{children:"docker"}),", ",(0,r.jsx)(n.code,{children:"podman"}),", or empty for auto-detection)"]}),(0,r.jsx)(n.td,{children:"auto-detect"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--platform"})}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["Target platform(s) for multi-arch images (e.g., ",(0,r.jsx)(n.code,{children:"linux/amd64,linux/arm64"}),"). Valid platforms: ",(0,r.jsx)(n.code,{children:"linux/amd64"}),", ",(0,r.jsx)(n.code,{children:"linux/arm64"}),", ",(0,r.jsx)(n.code,{children:"linux/riscv64"}),", ",(0,r.jsx)(n.code,{children:"linux/ppc64le"}),", ",(0,r.jsx)(n.code,{children:"linux/s390x"}),", ",(0,r.jsx)(n.code,{children:"linux/386"}),", ",(0,r.jsx)(n.code,{children:"linux/arm/v7"}),", ",(0,r.jsx)(n.code,{children:"linux/arm/v6"})]}),(0,r.jsx)(n.td,{children:"all platforms"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--cacert"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Absolute path to buildkitd CA certificate"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--cert"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Absolute path to buildkit client certificate"}),(0,r.jsx)(n.td,{})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"--key"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"Absolute path to buildkit client key"}),(0,r.jsx)(n.td,{})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,r.jsx)(n.h3,{id:"pipe-to-docker-build",children:"Pipe to Docker Build"}),"\n",(0,r.jsxs)(n.p,{children:["The most common usage is piping the generated context directly to ",(0,r.jsx)(n.code,{children:"docker build"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Generate and immediately build the patched image\ncopa generate -i nginx:1.21.6 | docker build -t nginx:1.21.6-patched -\n"})}),"\n",(0,r.jsx)(n.h3,{id:"save-to-file",children:"Save to File"}),"\n",(0,r.jsx)(n.p,{children:"Save the build context for later use:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Generate and save the build context\ncopa generate -i nginx:1.21.6 --output-context patch-context.tar\n\n# Later, build the patched image\ndocker build -t nginx:1.21.6-patched - < patch-context.tar\n"})}),"\n",(0,r.jsx)(n.h3,{id:"with-vulnerability-report",children:"With Vulnerability Report"}),"\n",(0,r.jsx)(n.p,{children:"Use a specific vulnerability report for targeted patching:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# First, generate a vulnerability report\ntrivy image --vuln-type os --ignore-unfixed -f json -o nginx-report.json nginx:1.21.6\n\n# Generate patch context using the report\ncopa generate -i nginx:1.21.6 -r nginx-report.json | docker build -t nginx:1.21.6-patched -\n"})}),"\n",(0,r.jsx)(n.h3,{id:"with-vex-output",children:"With VEX Output"}),"\n",(0,r.jsx)(n.p,{children:"Generate a VEX (Vulnerability Exploitability eXchange) document alongside the patch context:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Generate patch context and VEX document\ncopa generate -i nginx:1.21.6 -r nginx-report.json \\\n  -f openvex -o nginx-patched.vex.json \\\n  --output-context patch-context.tar\n\n# Build the patched image\ndocker build -t nginx:1.21.6-patched - < patch-context.tar\n\n# The VEX document can be used for compliance and attestation\ncat nginx-patched.vex.json\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," The VEX document generated by ",(0,r.jsx)(n.code,{children:"copa generate"})," uses the image tag as the reference (e.g., ",(0,r.jsx)(n.code,{children:"nginx:1.21.6-patched"}),"), since the image digest is not available until after the Docker build completes. If you need the digest in your VEX document, use ",(0,r.jsx)(n.code,{children:"copa patch"})," instead."]}),"\n",(0,r.jsx)(n.h2,{id:"build-context-structure",children:"Build Context Structure"}),"\n",(0,r.jsx)(n.p,{children:"The generated tar file contains:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-text",children:"\u251c\u2500\u2500 Dockerfile              # Instructions to apply the patch\n\u2514\u2500\u2500 patch/                  # Directory with updated packages\n    \u251c\u2500\u2500 usr/\n    \u251c\u2500\u2500 lib/\n    \u2514\u2500\u2500 ...                 # Other patched files\n"})}),"\n",(0,r.jsx)(n.h3,{id:"generated-dockerfile",children:"Generated Dockerfile"}),"\n",(0,r.jsx)(n.p,{children:"The Dockerfile in the build context looks like:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-dockerfile",children:'FROM nginx:1.21.6\nCOPY patch/ /\nLABEL sh.copa.image.patched="2024-03-20T10:30:00Z"\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"comparison-with-copa-patch",children:["Comparison with ",(0,r.jsx)(n.code,{children:"copa patch"})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.code,{children:"copa patch"})}),(0,r.jsx)(n.th,{children:(0,r.jsx)(n.code,{children:"copa generate"})})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Output"})}),(0,r.jsx)(n.td,{children:"Patched image in registry/daemon"}),(0,r.jsx)(n.td,{children:"Build context tar stream"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Registry Access"})}),(0,r.jsx)(n.td,{children:"Required for push"}),(0,r.jsx)(n.td,{children:"Not required"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Use Case"})}),(0,r.jsx)(n.td,{children:"Direct patching"}),(0,r.jsx)(n.td,{children:"Pipeline integration"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Flexibility"})}),(0,r.jsx)(n.td,{children:"Less flexible"}),(0,r.jsx)(n.td,{children:"Highly flexible"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Performance"})}),(0,r.jsx)(n.td,{children:"Single operation"}),(0,r.jsx)(n.td,{children:"Can be parallelized"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"VEX Output"})}),(0,r.jsx)(n.td,{children:"Yes (with image digest)"}),(0,r.jsx)(n.td,{children:"Yes (with image tag only)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Docker Build Features"})}),(0,r.jsx)(n.td,{children:"Limited (no buildx flags)"}),(0,r.jsx)(n.td,{children:"Full (all docker build flags)"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"1-always-verify-output",children:"1. Always Verify Output"}),"\n",(0,r.jsx)(n.p,{children:"When using stdout, ensure the output is valid before piping:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Verify the context first\ncopa generate -i nginx:1.21.6 --output-context test.tar\ntar -tf test.tar  # Check contents\n\n# Then use in production\ncopa generate -i nginx:1.21.6 | docker build -t nginx:patched -\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-handle-tty-detection",children:"2. Handle TTY Detection"}),"\n",(0,r.jsx)(n.p,{children:"Copa refuses to write tar data to a terminal. Always redirect output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# \u274c Wrong - outputs to terminal\ncopa generate -i nginx:1.21.6\n\n# \u2705 Correct - redirect to file or pipe\ncopa generate -i nginx:1.21.6 > patch.tar\ncopa generate -i nginx:1.21.6 | docker build -t nginx:patched -\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-use-specific-reports-for-reproducibility",children:"3. Use Specific Reports for Reproducibility"}),"\n",(0,r.jsx)(n.p,{children:"For consistent results across environments:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Generate report once\ntrivy image --vuln-type os -f json -o report.json nginx:1.21.6\n\n# Use the same report for all patch generations\ncopa generate -i nginx:1.21.6 -r report.json --output-context patch.tar\n"})}),"\n",(0,r.jsx)(n.h3,{id:"4-optimize-for-cicd",children:"4. Optimize for CI/CD"}),"\n",(0,r.jsx)(n.p,{children:"Cache generated contexts when possible:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Generate context with cache key\nCACHE_KEY=$(sha256sum report.json | cut -d\' \' -f1)\nCACHE_FILE="patch-cache/${CACHE_KEY}.tar"\n\nif [ ! -f "$CACHE_FILE" ]; then\n  copa generate -i nginx:1.21.6 -r report.json --output-context "$CACHE_FILE"\nfi\n\ndocker build -t nginx:patched - < "$CACHE_FILE"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"no-local-sources-enabled-error",children:'"No local sources enabled" Error'}),"\n",(0,r.jsxs)(n.p,{children:["This error from ",(0,r.jsx)(n.code,{children:"docker build"})," indicates an invalid or empty build context:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Check if copa generate succeeded\ncopa generate -i nginx:1.21.6 --output-context test.tar || echo "Generation failed"\n\n# Verify tar contents\ntar -tf test.tar\n'})}),"\n",(0,r.jsx)(n.h3,{id:"empty-patch-layer",children:"Empty Patch Layer"}),"\n",(0,r.jsx)(n.p,{children:"If the image has no upgradable packages, Copa will log a message and return nothing:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Copa will log when an image is already up-to-date\ncopa generate -i alpine:latest --output-context patch.tar\n# Output: INFO[0005] Image is already up-to-date. No packages to upgrade.\n\n# Resulting patch.tar will not be created.\n"})}),"\n",(0,r.jsx)(n.h3,{id:"buildkit-connection-issues",children:"BuildKit Connection Issues"}),"\n",(0,r.jsx)(n.p,{children:"If BuildKit isn't detected automatically, specify the address:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Use Docker's BuildKit\ncopa generate -i nginx:1.21.6 --addr docker://\n\n# Use a specific buildx builder\ndocker buildx create --name copa-builder --use\ncopa generate -i nginx:1.21.6 --addr buildx://copa-builder\n"})}),"\n",(0,r.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"copa generate"})," command provides a flexible way to integrate Copa's patching capabilities into any container build workflow. By producing standard Docker build contexts, it enables:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Seamless CI/CD integration"}),"\n",(0,r.jsx)(n.li,{children:"Offline patching workflows"}),"\n",(0,r.jsx)(n.li,{children:"Custom build pipelines"}),"\n",(0,r.jsx)(n.li,{children:"Parallel processing of multiple images"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Whether you're automating security updates in production or integrating patches into complex build systems, ",(0,r.jsx)(n.code,{children:"copa generate"})," offers the flexibility and control needed for enterprise container security."]}),"\n",(0,r.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Learn about ",(0,r.jsx)(n.a,{href:"/copacetic/website/next/scanner-plugins",children:"scanner plugins"})," for custom vulnerability sources"]}),"\n",(0,r.jsxs)(n.li,{children:["Explore ",(0,r.jsx)(n.a,{href:"/copacetic/website/next/best-practices",children:"best practices"})," for production use"]}),"\n",(0,r.jsxs)(n.li,{children:["Check out the ",(0,r.jsx)(n.a,{href:"/copacetic/website/next/quick-start",children:"quick start guide"})," for basic Copa usage"]}),"\n",(0,r.jsxs)(n.li,{children:["Read about ",(0,r.jsx)(n.a,{href:"/copacetic/website/next/multiplatform-patching",children:"multi-platform patching"})," for complex images"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>s});var i=t(6540);const r={},c=i.createContext(r);function d(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);