"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4160],{6802:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"quick-start","title":"Quick Start","description":"This guide illustrates how to patch outdated containers with copa.","source":"@site/versioned_docs/version-v0.10.x/quick-start.md","sourceDirName":".","slug":"/quick-start","permalink":"/copacetic/website/v0.10.x/quick-start","draft":false,"unlisted":false,"tags":[],"version":"v0.10.x","frontMatter":{"title":"Quick Start"},"sidebar":"sidebar","previous":{"title":"Installation","permalink":"/copacetic/website/v0.10.x/installation"},"next":{"title":"Tagging Guidelines","permalink":"/copacetic/website/v0.10.x/best-practices"}}');var s=i(4848),a=i(8453);const o={title:"Quick Start"},c=void 0,r={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Sample Steps",id:"sample-steps",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["This guide illustrates how to patch outdated containers with ",(0,s.jsx)(n.code,{children:"copa"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Linux or macOS configured through the ",(0,s.jsx)(n.a,{href:"/copacetic/website/v0.10.x/installation",children:"setup instructions"}),". This includes:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"copa"})," tool ",(0,s.jsx)(n.a,{href:"/copacetic/website/v0.10.x/installation",children:"built & pathed"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/moby/buildkit/#quick-start",children:"buildkit"})," daemon installed & pathed. ",(0,s.jsx)(n.a,{href:"#buildkit-connection-examples",children:"Examples"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.code,{children:"docker"})," daemon runs a buildkit service in-process. If you are using this for your buildkit instance, Docker must have the ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/storage/containerd/",children:"containerd image store feature"})," enabled."]}),"\n",(0,s.jsx)(n.li,{children:"If you are using a buildx instance, or using buildkitd directly, there is no need to enable the containerd image store. However, only images in a remote registry can be patched using these methods."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://docs.docker.com/desktop/linux/install/#generic-installation-steps",children:"docker"})," daemon running and CLI installed & pathed."]}),"\n",(0,s.jsxs)(n.li,{children:["Optional:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://aquasecurity.github.io/trivy/latest/getting-started/installation/",children:"trivy CLI"})," installed & pathed.","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Alternatively, see ",(0,s.jsx)(n.a,{href:"#scanner-plugins",children:"scanner plugins"})," for custom scanner support."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"sample-steps",children:"Sample Steps"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Before patching your image, specify a buildkit instance to connect to:"}),"\n",(0,s.jsx)(n.p,{children:"By default copa will attempt to auto-connect to an instance in order:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Default docker buildkit endpoint (requires at least docker v24.0 with ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/storage/containerd/#enable-containerd-image-store-on-docker-engine",children:"containerd image store"})," support enabled)"]}),"\n",(0,s.jsxs)(n.li,{children:["Currently selected buildx builder (see: ",(0,s.jsx)(n.code,{children:"docker buildx --help"}),")"]}),"\n",(0,s.jsxs)(n.li,{children:["buildkit daemon at the default address ",(0,s.jsx)(n.code,{children:"/run/buildkit/buildkitd.sock"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["If an instance doesn't exist or that instance doesn't support all the features copa needs the next will be attempted. Please see ",(0,s.jsx)(n.a,{href:"/copacetic/website/v0.10.x/custom-address",children:"custom buildkit addresses"})," for more information."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Scan the container image to check for patchable OS vulnerabilities:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ export IMAGE=docker.io/library/nginx:1.21.6\n$ trivy image --vuln-type os --ignore-unfixed $IMAGE\nnginx:1.21.6 (debian 11.3)\n==========================\nTotal: 207 (UNKNOWN: 0, LOW: 12, MEDIUM: 104, HIGH: 76, CRITICAL: 15)\n...\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Patch the supplied image with Copa:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Update all outdated packages\nBy default, Copa will update all outdated packages in an image to the latest available versions."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Upgrading all packages may introduce compatibility issues or break existing functionality. Make sure to test the patched image to ensure stability."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"copa patch -i $IMAGE\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"If you want to patch an image using the digest, run the following command instead:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"    export IMAGE=docker.io/library/nginx@sha256:25dedae0aceb6b4fe5837a0acbacc6580453717f126a095aa05a3c6fcea14dd4\n       copa patch -i $IMAGE\n"})}),(0,s.jsx)(n.p,{children:"Or if you want to patch an image using the tag and digest, run the following command instead:"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"    export IMAGE=docker.io/library/nginx:1.21.6@sha256:25dedae0aceb6b4fe5837a0acbacc6580453717f126a095aa05a3c6fcea14dd4\n    copa patch -i $IMAGE\n"})})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Update only targeted packages\nAlternatively, you can chose to have a targeted patching of your image by providing an optional vulnerability report. In the following commands, we are only updating packages marked vulnerable by Trivy:"}),"\n",(0,s.jsx)(n.p,{children:"2.1. Scan the container image for patchable OS vulnerabilities, outputting the results to a JSON file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"trivy image --vuln-type os --ignore-unfixed -f json -o $(basename $IMAGE).json $IMAGE\n"})}),"\n",(0,s.jsx)(n.p,{children:"2.2. Supply the Trivy report as an additional argument to the Copa command to patch image."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"copa patch -r $(basename $IMAGE).json -i $IMAGE\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["In both cases by default, Copa will produce a tag with a ",(0,s.jsx)(n.code,{children:"-patched"})," suffix and export a new image with the specified ",(0,s.jsx)(n.code,{children:"1.21.6-patched"})," label to the local Docker daemon."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["If you're running this sample against an image from a private registry instead,ensure that the credentials are configured in the default Docker config.json before running ",(0,s.jsx)(n.code,{children:"copa patch"}),", for example, via ",(0,s.jsx)(n.code,{children:"docker login -u <user> -p <password> <registry>"}),"."]})}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["If you're patching an image that is local-only (i.e. built or tagged locally but not pushed to a registry), ",(0,s.jsx)(n.code,{children:"copa"})," is limited to using ",(0,s.jsx)(n.code,{children:"docker"}),"'s built-in buildkit service, and must use the ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/storage/containerd/",children:(0,s.jsx)(n.code,{children:"containerd image store"})})," feature. This is because only ",(0,s.jsx)(n.code,{children:"docker"}),"'s built-in buildkit service has access to the docker image store (see ",(0,s.jsx)(n.a,{href:"#prerequisites",children:"Prerequisites"})," for more information.)"]})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Scan the patched image again and verify that the vulnerabilities have been patched:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"$ trivy image --vuln-type os --ignore-unfixed $IMAGE-patched\nnginx:1.21.6-patched (debian 11.10)\n===================================\nTotal: 0 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 0)\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Run the container to verify that the image has no regressions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'$ docker run -it --rm --name test $IMAGE-patched\n/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration\n/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh\n10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf\n10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh\n/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh\n/docker-entrypoint.sh: Configuration complete; ready for start up\n2024/01/22 23:32:54 [notice] 1#1: using the "epoll" event method\n2024/01/22 23:32:54 [notice] 1#1: nginx/1.21.6\n2024/01/22 23:32:54 [notice] 1#1: built by gcc 10.2.1 20210110 (Debian 10.2.1-6)\n2024/01/22 23:32:54 [notice] 1#1: OS: Linux 6.2.0-1018-azure\n2024/01/22 23:32:54 [notice] 1#1: getrlimit(RLIMIT_NOFILE): 1048576:1048576\n2024/01/22 23:32:54 [notice] 1#1: start worker processes\n'})}),"\n",(0,s.jsxs)(n.p,{children:["You can stop the container by opening a new shell instance and running: ",(0,s.jsx)(n.code,{children:"docker stop test"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["You can inspect the structure of the patched image with ",(0,s.jsx)(n.code,{children:"docker history"})," to see the new patch layer appended to the image:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'$ docker history $IMAGE-patched\nIMAGE          CREATED              CREATED BY                                      SIZE      COMMENT\n262dacfeb193   About a minute ago   mount / from exec sh -c apt-get install --no-ins\u2026   41.1MB    buildkit.exporter.image.v0\n<missing>      20 months ago        /bin/sh -c #(nop)  CMD ["nginx" "-g" "daemon\u2026   0B\n<missing>      20 months ago        /bin/sh -c #(nop)  STOPSIGNAL SIGQUIT           0B\n<missing>      20 months ago        /bin/sh -c #(nop)  EXPOSE 80                    0B\n<missing>      20 months ago        /bin/sh -c #(nop)  ENTRYPOINT ["/docker-entr\u2026   0B\n<missing>      20 months ago        /bin/sh -c #(nop) COPY file:09a214a3e07c919a\u2026   16.4kB\n<missing>      20 months ago        /bin/sh -c #(nop) COPY file:0fd5fca330dcd6a7\u2026   12.3kB\n<missing>      20 months ago        /bin/sh -c #(nop) COPY file:0b866ff3fc1ef5b0\u2026   12.3kB\n<missing>      20 months ago        /bin/sh -c #(nop) COPY file:65504f71f5855ca0\u2026   8.19kB\n<missing>      20 months ago        /bin/sh -c set -x     && addgroup --system -\u2026   64.5MB\n<missing>      20 months ago        /bin/sh -c #(nop)  ENV PKG_RELEASE=1~bullseye   0B\n<missing>      20 months ago        /bin/sh -c #(nop)  ENV NJS_VERSION=0.7.3        0B\n<missing>      20 months ago        /bin/sh -c #(nop)  ENV NGINX_VERSION=1.21.6     0B\n<missing>      20 months ago        /bin/sh -c #(nop)  LABEL maintainer=NGINX Do\u2026   0B\n<missing>      20 months ago        /bin/sh -c #(nop)  CMD ["bash"]                 0B\n<missing>      20 months ago        /bin/sh -c #(nop) ADD file:134f25aec8adf83cb\u2026   91.8MB\n'})}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var t=i(6540);const s={},a=t.createContext(s);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);